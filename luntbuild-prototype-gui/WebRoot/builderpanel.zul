<?xml version="1.0" encoding="utf-8" ?>

<zk	xmlns="http://www.zkoss.org/2005/zul"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.zkoss.org/2005/zul http://www.zkoss.org/2005/zul/zul.xsd"
	xmlns:h="http://www.w3.org/1999/xhtml">

	<zscript>
class VariableListItem {
	String name;
	String value;
	public VariableListItem(String name, String value) {
		this.name = name;
		this.value = value;
	}
	public String getValue() {return value;}
	public String getName() {return name;}
}
ArrayList buildPropertiesList = new ArrayList();
buildPropertiesList.add(new VariableListItem("buildVersion", "${build.version}"));

	void addProperty() {
		String name = self.getFellow(self.getAttribute("builderpropertynameid")).getValue();
		String value = self.getFellow(self.getAttribute("builderpropertyvalueid")).getValue();
		if (name == null || name.trim().length() == 0 ||
			value == null || value.trim().length() == 0)
			return;
		// TODO check if var name exists and modify
		Listitem li = new Listitem();
		new Listcell(name).setParent(li);
		new Listcell(value).setParent(li);
		Listcell lc = new Listcell();
		Button btn = new Button(null, "/img/trash.png");
		// TODO create custom attributes
		btn.addEventListener(Events.ON_CLICK,
			new EventListener() {
				public boolean isAsap() {return false;}
				public void onEvent(Event evt) {
					self.getParent().getParent().setSelected(true);
					deleteProperty();
				}
		});
		btn.setParent(lc);
		lc.setParent(li);
		Component comp = self.getFellow(self.getAttribute("builderpropertieslistid"));
		li.setParent(comp);
	}
	void deleteProperty() {
		Component comp = self.getFellow(self.getAttribute("builderpropertieslistid"));
		Listitem item = comp.getSelectedItem();
		if (item != null) item.detach();
	}

ArrayList buildEnvList = new ArrayList();
buildEnvList.add(new VariableListItem("MY_BUILD_VERSION", "${build.version}"));

	void addEnvVar() {
		String name = self.getFellow(self.getAttribute("builderenvnameid")).getValue();
		String value = self.getFellow(self.getAttribute("builderenvvalueid")).getValue();
		if (name == null || name.trim().length() == 0 ||
			value == null || value.trim().length() == 0)
			return;
		// TODO check if var name exists and modify
		Listitem li = new Listitem();
		new Listcell(name).setParent(li);
		new Listcell(value).setParent(li);
		Listcell lc = new Listcell();
		Button btn = new Button(null, "/img/trash.png");
		// TODO create custom attributes
		btn.addEventListener(Events.ON_CLICK,
			new EventListener() {
				public boolean isAsap() {return false;}
				public void onEvent(Event evt) {
					self.getParent().getParent().setSelected(true);
					deleteEnvVar();
				}
		});
		btn.setParent(lc);
		lc.setParent(li);
		Component comp = self.getFellow(self.getAttribute("builderenvlistid"));
		li.setParent(comp);
	}
	void deleteEnvVar() {
		Component comp = self.getFellow(self.getAttribute("builderenvlistid"));
		Listitem item = comp.getSelectedItem();
		if (item != null) item.detach();
	}
</zscript>

	<grid>
		<columns>
			<column/>
			<column/>
			<column/>
			<column/>
			<column/>
			<column/>
		</columns>
		<rows>
			<row>
				<hbox>
					<image src="/img/name.gif"/>
					<label value="${c:l('builderpanel.name')}"/>
				</hbox>
				<textbox id="${arg.type}buildername" width="150px" value="${arg.name}" constraint="no empty: ${c:l('builderpanel.name.noempty')}"/>
				<button image="/img/icon_help.png" tooltip="buildername-tip"/>
				<hbox>
					<image src="/img/property.gif"/>
					<label value="${c:l('builderpanel.command.ant')}" if="${arg.type eq &quot;ant&quot;}"/>
					<label value="${c:l('builderpanel.command.maven1')}" if="${arg.type eq &quot;maven1&quot;}"/>
					<label value="${c:l('builderpanel.command.maven2')}" if="${arg.type eq &quot;maven2&quot;}"/>
					<label value="${c:l('builderpanel.command.cmd')}" if="${arg.type eq &quot;command&quot;}"/>
					<label value="${c:l('builderpanel.command.nant')}" if="${arg.type eq &quot;nant&quot;}"/>
					<label value="${c:l('builderpanel.command.rake')}" if="${arg.type eq &quot;rake&quot;}"/>
				</hbox>
				<textbox id="${arg.type}buildercmd" multiline="true" rows="3" width="250px" value="${arg.desc}"/>
				<button image="/img/icon_help.png" tooltip="buildercmd-tip"/>
			</row>
			<row>
				<hbox>
					<image src="/img/property.gif"/>
					<label value="${c:l('builderpanel.scriptpath')}" if="${arg.type eq &quot;ant&quot;}"/>
					<label value="${c:l('builderpanel.scriptpath')}" if="${arg.type eq &quot;nant&quot;}"/>
					<label value="${c:l('builderpanel.scriptpath')}" if="${arg.type eq &quot;rake&quot;}"/>
					<label value="${c:l('builderpanel.maven.dir')}" if="${arg.type eq &quot;maven1&quot;}"/>
					<label value="${c:l('builderpanel.maven.dir')}" if="${arg.type eq &quot;maven2&quot;}"/>
					<label value="${c:l('builderpanel.cmd.dir')}" if="${arg.type eq &quot;command&quot;}"/>
				</hbox>
				<textbox id="${arg.type}builderscript" width="150px" value="${arg.name}"
					constraint="no empty: ${c:l('builderpanel.path.noempty')}"/>
				<button image="/img/icon_help.png" tooltip="builderscript-tip"/>
				<hbox>
					<image src="/img/property.gif"/>
					<label value="${c:l('builderpanel.targets')}" if="${arg.type eq &quot;ant&quot;}"/>
					<label value="${c:l('builderpanel.targets')}" if="${arg.type eq &quot;nant&quot;}"/>
					<label value="${c:l('builderpanel.targets')}" if="${arg.type eq &quot;rake&quot;}"/>
					<label value="${c:l('builderpanel.maven.goals')}" if="${arg.type eq &quot;maven1&quot;}"/>
					<label value="${c:l('builderpanel.maven.goals')}" if="${arg.type eq &quot;maven2&quot;}"/>
					<label value="${c:l('builderpanel.cmd.wait')}" if="${arg.type eq &quot;command&quot;}"/>
				</hbox>
				<textbox id="${arg.type}buildertraget" width="150px" value="${arg.name}" unless="${arg.type eq &quot;command&quot;}"
					constraint="no empty: ${c:l('builderpanel.target.noempty')}"/>
				<radiogroup id="${arg.type}buildertraget" if="${arg.type eq &quot;command&quot;}">
					<radio label="${c:l('constants.yes')}" selected="true"/>
					<radio label="${c:l('constants.no')}"/>
				</radiogroup>
				<button image="/img/icon_help.png" tooltip="buildertargets-tip"/>
			</row>
			<row spans="1,4,1" unless="${arg.type eq &quot;command&quot;}">
				<hbox>
					<image src="/img/property.gif"/>
					<label value="${c:l('builderpanel.build.properties')}"/>
				</hbox>
				<hbox>
					<listbox id="${arg.type}builderpropertieslist" rows="4">
						<listhead>
							<listheader width="150px" label="${c:l('buildpanel.name')}"/>
							<listheader width="150px" label="${c:l('buildpanel.value')}"/>
							<listheader width="20px" label="X"/>
						</listhead>
						<listitem forEach="${buildPropertiesList}" value="${each.name}">
							<listcell label="${each.name}"/>
							<listcell label="${each.value}"/>
							<listcell>
								<button image="/img/trash.png">
								<custom-attributes
									builderpropertynameid="${arg.type}builderpropertyname"
									builderpropertyvalueid="${arg.type}builderpropertyvalue"
									builderpropertieslistid="${arg.type}builderpropertieslist"/>
								<attribute name="onClick">
									self.parent.parent.setSelected(true);
									deleteProperty();
								</attribute>
								</button>
							</listcell>
						</listitem>
					</listbox>
					<vbox>
						<hbox>
							<label value="${c:l('buildpanel.name')}:"/>
							<textbox id="${arg.type}builderpropertyname" width="150px"/>
						</hbox>
						<hbox>
							<label value="${c:l('buildpanel.value')}:"/>
							<textbox id="${arg.type}builderpropertyvalue" width="150px"/>
						</hbox>
						<button label="${c:l('constants.add')}" onClick="addProperty()">
							<custom-attributes
								builderpropertynameid="${arg.type}builderpropertyname"
								builderpropertyvalueid="${arg.type}builderpropertyvalue"
								builderpropertieslistid="${arg.type}builderpropertieslist"/>
						</button>
					</vbox>
				</hbox>
				<button image="/img/icon_help.png" tooltip="builderproperties-tip"/>
			</row>
			<row spans="1,4,1">
				<hbox>
					<image src="/img/property.gif"/>
					<label value="${c:l('buildpanel.envvars')}"/>
				</hbox>
				<hbox>
					<listbox id="${arg.type}builderenvlist" rows="4">
						<listhead>
							<listheader width="150px" label="${c:l('buildpanel.name')}"/>
							<listheader width="150px" label="${c:l('buildpanel.value')}"/>
							<listheader width="20px" label="X"/>
						</listhead>
						<listitem forEach="${buildEnvList}" value="${each.name}">
							<listcell label="${each.name}"/>
							<listcell label="${each.value}"/>
							<listcell>
								<button image="/img/trash.png">
								<custom-attributes
									builderenvnameid="${arg.type}builderenvname"
									builderenvvalueid="${arg.type}builderenvvalue"
									builderenvlistid="${arg.type}builderenvlist"/>
								<attribute name="onClick">
									self.parent.parent.setSelected(true);
									deleteEnvVar();
								</attribute>
								</button>
							</listcell>
						</listitem>
					</listbox>
					<vbox>
						<hbox>
							<label value="${c:l('buildpanel.name')}:"/>
							<textbox id="${arg.type}builderenvname" width="150px"/>
						</hbox>
						<hbox>
							<label value="${c:l('buildpanel.value')}:"/>
							<textbox id="${arg.type}builderenvvalue" width="150px"/>
						</hbox>
						<button label="${c:l('constants.add')}" onClick="addEnvVar()">
							<custom-attributes
								builderenvnameid="${arg.type}builderenvname"
								builderenvvalueid="${arg.type}builderenvvalue"
								builderenvlistid="${arg.type}builderenvlist"/>
						</button>
					</vbox>
				</hbox>
				<button image="/img/icon_help.png" tooltip="builderenvvar-tip"/>
			</row>
			<row spans="1,4,1">
				<hbox>
					<image src="/img/property.gif"/>
					<label value="${c:l('buildpanel.success.condition')}"/>
				</hbox>
				<textbox id="${arg.type}buildercondition" width="250px" value="${arg.condition}"
					constraint="no empty: ${c:l('buildpanel.success.condition.noempty')}"/>
				<button image="/img/icon_help.png" tooltip="buildercondition-tip"/>
			</row>
		</rows>
	</grid>

	<separator/>
	<hbox>
		<button label="${c:l('constants.save')}" onClick="alert(self.label)" if="${arg.save}"/>
		<button label="${c:l('constants.create')}" onClick="alert(self.label)" unless="${arg.edit || arg.save}"/>
		<button label="${c:l('constants.edit')}" onClick="alert(self.label)" if="${arg.edit}"/>
		<button label="${c:l('constants.next')}" unless="${arg.save}">
			<custom-attributes buildernameid="${arg.type}buildername"/>
			<attribute name="onClick">
				String val=self.getFellow(self.getAttribute("buildernameid")).getValue();
				if (val == null || val.trim().length() == 0) {
					String undefined=org.zkoss.util.resource.Labels.getLabel("builderpanel.builder.undefined");
					alert(undefined);
					return;
				}
				// TODO save builder
				buildereditwin.visible = false;
				scheduleditwin.doOverlapped();
			</attribute>
		</button>
		<button label="${c:l('constants.cancel')}" onClick="buildereditwin.visible = false; event.stopPropagation();" unless="${arg.save}"/>
	</hbox>

</zk>